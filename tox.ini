[tox]
# https://github.com/tox-dev/tox/issues/3238
requires = tox==4.14.0

# these are the default environments, i.e. the list of tests running when you
# execute `tox` in the command-line without anything else
envlist =
    lint
    tests
    torch-tests
    examples
    jax-tests

[testenv]
skip_install = True
passenv =
    PIP_EXTRA_INDEX_URL

allowlist_externals =
    bash

pip_install_flags = --no-deps --no-cache --no-build-isolation --check-build-dependencies --force-reinstall
lint_folders = python setup.py sphericart-torch/python sphericart-torch/setup.py

[testenv:tests]
# this environement runs Python tests

deps =
    wheel
    setuptools
    cmake

    numpy<2.0.0
    scipy
    pytest

commands =
    pip install {[testenv]pip_install_flags} .
    pytest python


[testenv:torch-tests]
# this environement runs tests for the torch bindings
deps =
    wheel
    setuptools
    cmake

    numpy<2.0.0
    torch
    pytest

    e3nn

changedir = sphericart-torch
passenv=
    PIP_EXTRA_INDEX_URL
commands =
    pip install {[testenv]pip_install_flags} .

    pytest python

[testenv:jax-tests]
# this environement runs tests for the jax bindings
deps =
    wheel
    setuptools
    cmake
    pybind11

    numpy<2.0.0
    absl-py # jax uses this package but not installed by jax[cpu]
    pytest
    equinox

allowlist_externals =
    bash

changedir = sphericart-jax
commands =
    # install sphericart for validation of the JAX version
    pip install {[testenv]pip_install_flags} ..

    # Install this one manually. Listing it in the deps list above does not install jaxlib.
    # Note: jax[cuda12] is not available on Windows and MacOS.
    bash -c "command -v nvcc && python -m pip install -U jax[cuda12] -f https://storage.googleapis.com/jax-releases/jax_cuda_releases.html || python -m pip install -U jax[cpu]"

    pip install {[testenv]pip_install_flags} .

    pytest python

[testenv:examples]
# this environement runs the examples for Python and Pytorch bindings
deps =
    wheel
    setuptools
    cmake
    pybind11

    numpy<2.0.0
    torch
    jax[cpu]
    pytest

passenv=
    PIP_EXTRA_INDEX_URL
commands =
    pip install {[testenv]pip_install_flags} .
    pip install {[testenv]pip_install_flags} ./sphericart-torch
    pip install {[testenv]pip_install_flags} ./sphericart-jax

    python examples/python/example.py
    python examples/pytorch/example.py
    python examples/jax/example.py

    python examples/python/spherical.py
    python examples/python/complex.py
    python examples/python/spherical_and_complex.py


[testenv:build-python]
# this environement makes sure one can build sdist and wheels for Python
deps =
    build
    twine

allowlist_externals =
    bash

commands =
    # check building sdist from a checkout and wheel from the sdist
    python -m build .

    twine check dist/*.tar.gz
    twine check dist/*.whl

    # check building wheels from a checkout
    python -m build . --wheel


[testenv:build-torch]
# this environement makes sure one can build sdist and wheels for the torch bindings
deps =
    build
    twine

changedir = sphericart-torch
commands =
    # check building sdist from a checkout and wheel from the sdist
    python -m build .

    twine check dist/*.tar.gz
    twine check dist/*.whl

    # check building wheels from a checkout
    python -m build . --wheel


[testenv:build-jax]
# this environement makes sure one can build sdist and wheels for the torch bindings
deps =
    build
    twine

changedir = sphericart-jax
commands =
    # check building sdist from a checkout and wheel from the sdist
    python -m build .

    twine check dist/*.tar.gz
    twine check dist/*.whl

    # check building wheels from a checkout
    python -m build . --wheel

[testenv:lint]
allowlist_externals =
    bash
# this environement lints the Python code with flake8 (code linter), black (code
# formatter), and isort (sorting of imports)
deps =
    flake8
    flake8-bugbear
    black
    isort
    clang-format

commands =
    flake8 {[testenv]lint_folders}
    black --check --diff {[testenv]lint_folders}
    isort --check-only --diff {[testenv]lint_folders}
    bash ./scripts/check-format.sh

[testenv:format]
# this environement abuses tox to do actual formatting
#
# Users can run `tox -e format` to run formatting on all files
allowlist_externals =
    bash
deps =
    black
    isort
commands =
    black {[testenv]lint_folders}
    isort {[testenv]lint_folders}
    bash ./scripts/format.sh


[testenv:docs]
# this environement builds the documentation with sphinx
deps =
    -r docs/requirements.txt

passenv =
    PIP_EXTRA_INDEX_URL

commands =
    pip install .[torch,jax]
    sphinx-build {posargs:-E} -W -b html docs/src docs/build/html

[testenv:docs-tests]
# test examples in the docs
deps =
    pytest

commands =
    pip install .[torch]
    pytest --doctest-modules --pyargs sphericart

[flake8]
max_line_length = 88
extend-ignore = E203
