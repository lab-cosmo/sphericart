name: Comment on pull request
on:
  workflow_run:
    workflows: ['Build Python wheels']
    types: [completed]

jobs:
  pr_comment:
    if: github.event.workflow_run.event == 'pull_request' && github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        with:
          script: |
            async function insertUpdateComment(owner, repo, issue_number, purpose, body) {
                const {data: comments} = await github.rest.issues.listComments(
                    {owner, repo, issue_number}
                );
                const marker = `<!-- bot: ${purpose} -->`;
                body = marker + "\n" + body;
                const existing = comments.filter((c) => c.body.includes(marker));
                if (existing.length > 0) {
                    const last = existing[existing.length - 1];
                    core.info(`Updating comment ${last.id}`);
                    await github.rest.issues.updateComment({
                        owner, repo,
                        body,
                        comment_id: last.id,
                    });
                } else {
                    core.info(`Creating a comment in issue / PR #${issue_number}`);
                    await github.rest.issues.createComment({issue_number, body, owner, repo});
                }
            }

            const {owner, repo} = context.repo;
            const run_id = ${{github.event.workflow_run.id}};
            const pull_requests = ${{ toJSON(github.event.workflow_run.pull_requests) }};
            if (!pull_requests.length) {
                return core.error("This workflow doesn't match any pull requests!");
            }

            const artifacts = await github.paginate(
                github.rest.actions.listWorkflowRunArtifacts, {owner, repo, run_id}
            );

            if (!artifacts.length) {
                return core.error(`No artifacts found`);
            }

            if (artifacts.length !== 1) {
                return core.error(`more than one artifact found`);
            }
            const link = `https://nightly.link/${owner}/${repo}/actions/artifacts/${artifacts[0].id}.zip`

            let body = `Here is a pre-built version of the code in this pull request: [wheels.zip](${link}), `;
            body += 'you can install it locally by unzipping `wheels.zip` and using `pip` to install the file matching your system';

            core.info("Review thread message body:", body);
            for (const pr of pull_requests) {
                await insertUpdateComment(owner, repo, pr.number, "link-to-wheels", body);
            }
