name: Build Python wheels

on:
  push:
    branches: [master]
    tags: "*"
  pull_request:
    # Check all PR

jobs:
  build-wheels:
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.name }}
    strategy:
      matrix:
        include:
          - name: x86_64 macOS
            os: macos-11
            platform-name: macosx-10.9-x86_64
          - name: M1 macOS
            os: macos-11
            platform-name: macosx-11.0-arm64
          # TODO: add a Windows builder
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: build wheel
        env:
          MACOS_DEPLOYMENT_TARGET: "11.0"
        run: |
          python -m pip install wheel cmake torch
          python setup.py bdist_wheel --plat-name ${{ matrix.platform-name }}
          cd torch
          python setup.py bdist_wheel --plat-name ${{ matrix.platform-name }}
          mv dist/*.whl ../dist/
      - uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist/*.whl
      - name: upload wheel to GitHub release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-manylinux-wheels:
    runs-on: ubuntu-20.04
    # TODO: add other arch for linux?
    name: x86_64 manylinux
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: build wheel in docker
        run: |
          docker run --rm -v $(pwd):/code quay.io/pypa/manylinux2014_x86_64 bash -c "cd /code && /opt/python/cp38-cp38/bin/python -m pip wheel --no-deps -w dist . --verbose"
          docker run --rm -v $(pwd):/code quay.io/pypa/manylinux2014_x86_64 bash -c "cd /code/torch && /opt/python/cp38-cp38/bin/python -m pip wheel --no-deps -w dist . --verbose --extra-index-url=https://download.pytorch.org/whl/cpu"
      - name: run auditwheel in docker
        run: |
          docker run --rm -v $(pwd):/code quay.io/pypa/manylinux2014_x86_64 bash -c "auditwheel repair /code/dist/*.whl -w /code/dist"
          docker run --rm -v $(pwd):/code quay.io/pypa/manylinux2014_x86_64 bash -c "auditwheel repair --exclude libtorch.so --exclude libtorch_cpu.so --exclude libc10.so /code/torch/dist/*.whl -w /code/dist"
      - name: remove wheel with wrong tag
        run: sudo rm dist/*linux_x86_64.whl
      - uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist/*.whl
      - name: upload wheel to GitHub release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-sdist:
    runs-on: ubuntu-20.04
    name: sdist
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: build sdist
        run: |
          python -m pip install wheel
          python setup.py sdist
          cd torch
          python setup.py sdist
          mv dist/*.tar.gz ../dist/

      - uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist/*.tar.gz
      - name: upload sdist to GitHub release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
